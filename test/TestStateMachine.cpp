#include "TestStateMachine.h"

typedef struct CTestItem {
  const char* re;
  const char* str;
  int lst_matches[200];
} test_item_t;

static test_item_t test_items[] = {
  {
    "a\\){3}" ,
    "a)) a)))a)) aaa aaaaa aaaaaa",
    {4, 7}
  },

  {"(ca){,3}",
   "cacacaca caca ca",
   {  0, 5,
      6, 7,
      9, 12,
      14, 15, }
  },

  {
    "(ca){2,}",
    "cacacaca caca ca",
    {
      0, 7,
      9, 12}
  },

  {
    "fo*b|c[a-c]+b",
    "fooc fob cab cbb fooobar cb ccc",
    {

      5, 7,
      9, 11,
      13, 15,
      17, 21
    }
  },

  {
    "c(a|b)+b",
    "cab cbb cb",
    {
      0, 2,
      4, 6
    }
  },

  {
    "(a|b)*bb",
    "bbb abbb bb a ",
    {
      0, 2,
      4, 7,
      9, 10,
    }
  },

  {
    "a\\+b",
    "a+aa+bbbabbab+aa+ba+bbba",
    {
      3, 5,
      15, 17,
      18, 20
    }
  },

  {
    "(a|b)*bbc",
    "bbc abbc bb ca aabbbbc ",
    {
      0, 2,
      4, 7,
      15, 21
    }
  },

  {
    "(ab)+",
    "ba ab bb aa ababab abab ab ",
    {
      3, 4,
      12, 17,
      19, 22,
      24, 25
    }
  },

  {
    "b(na)*c",
    "bnac bc nanana aannnaaak",
    {
      0, 3,
      5, 6
    }
  },

  {
    "(a|b)|c?b",
    "a r ab cb c",
    {
      0, 0,
      4, 4,
      5, 5,
      7, 8
    }
  },

  {
    "cadcafctr|padpadpafttr",
    "cadcafcadcadcafctr cacacadcadpadpadpadpafttr ",
    {
      9, 17,
      32, 43,
    }
  },

  {
    "cadcadcabf",
    "cadcadcadcadcabf",
    {
      6, 15,
    }
  },

  {
    "a.*b[0-9]",
    "ab2\na33b3",
    {
      0, 2,
      5, 9
    }
  },

  {
    "a[a-c]*c[0-2][a-c0-2]*c",
    "abbc2abc",
    {
      0, 7,
    }
  },

  {
    "[^bc]*",
    "aabc",
    {
      0, 1,
    }
  },

  {
    "..",
    "aabcd ii4",
    {
      0, 1,
      2, 3,
      4, 5,
      6, 7
    }
  },

  {
    "[:alnum:]",
    "hello$world##!!how are you",
    {
      0, 0,
      1, 1,
      2, 2,
      3, 3,
      4, 4,
      6, 6,
      7, 7,
      8, 8,
      9, 9,
      10, 10,
      15, 15,
      16, 16,
      17, 17,
      19, 19,
      20, 20,
      21, 21,
      23, 23,
      24, 24,
      25, 25
    }
  },

  {
    "[:alpha:]",
    "bir 2 uch 4 besh",
    {
      0, 0,
      1, 1,
      2, 2,
      6, 6,
      7, 7,
      8, 8,
      12, 12,
      13, 13,
      14, 14,
      15, 15
    }
  },

  {
    "[:ascii:]",
    "abcd e",
    {
      0, 0,
      1, 1,
      2, 2,
      3, 3,
      4, 4,
      5, 5
    }
  },


  {"[:blank:]",
   "hello world !!!",
   {
     5, 5,
     11, 11
   }
  },

  {
    "[:cntrl:]",
    "hello\nworld !!!",
    {
      5, 5
    }
  },

  {
    "[:digit:]-[:digit:]",
    "55-654-44-e",
    {
      1, 3,
      5, 7
    }
  },

  {
    "[:graph:]",
    "hello\nworld",
    {
      0, 0,
      1, 1,
      2, 2,
      3, 3,
      4, 4,
      7, 7,
      8, 8,
      9, 9,
      10, 10,
      11, 11
    }
  },

  {
    "[:lower:]",
    "HELLO world!",
    {
      6, 6,
      7, 7,
      8, 8,
      9, 9,
      10, 10
    }
  },


  {
    "[:print:]",
    "hello\nworld",
    {
      0, 0,
      1, 1,
      2, 2,
      3, 3,
      4, 4,
      5, 5,
      7, 7,
      8, 8,
      9, 9,
      10, 10,
      11, 11
    }
  },

  {
    "[:punct:]",
    "a[b!c\"d#e$f%g&h'i(j)k*l+m,n\\o-p.q/r:s;t<u=v>w?x@y]z^1_2`3{4|5}6~7]8",
    {
      1, 1,
      3, 3,
      5, 5,
      7, 7,
      9, 9,
      11, 11,
      13, 13,
      15, 15,
      17, 17,
      19, 19,
      21, 21,
      23, 23,
      25, 25,
      29, 29,
      31, 31,
      33, 33,
      35, 35,
      37, 37,
      39, 39,
      41, 41,
      43, 43,
      45, 45,
      47, 47,
      49, 49,
      51, 51,
      53, 53,
      55, 55,
      57, 57,
      61, 61,
      63, 63,
      65, 65
    }
  },


  {"[:space:]",
   "arg1 arg2	   ",
   {
     4, 4,
     9, 9,
     10, 10,
     11, 11,
     12, 12,
   }
  },

  {
    "[:upper:]",
    "HELLO world!",
    {
      0, 0,
      1, 1,
      2, 2,
      3, 3,
      4, 4
    }
  },

  {
    "[:word:]",
    "hell_world implementation",
    {
      0, 0,
      1, 1,
      2, 2,
      3, 3,
      4, 4,
      5, 5,
      6, 6,
      7, 7,
      8, 8,
      9, 9,
      11, 11,
      12, 12,
      13, 13,
      14, 14,
      15, 15,
      16, 16,
      17, 17,
      18, 18,
      19, 19,
      20, 20,
      21, 21,
      22, 22,
      23, 23,
      24, 24
    }
  },

  {
    "[:xdigit:]",
    "FF23E hhh dd12",
    {
      0, 0,
      1, 1,
      2, 2,
      3, 3,
      4, 4,
      10, 10,
      11, 11,
      12, 12,
      13, 13
    }
  },

  {"c\\d",
   "ab3 cc40",
   {
     5, 6
   }
  },

  {
    "c\\D",
    "ab3 cc40",
    {
      4, 5
    }
  },

  {
    "\\s",
    "be bebe	 be\n",
    {
      2, 2,
      7, 7,
      8, 8,
      11, 11
    }
  },

  {
    "\\S",
    "be bebe	 be\n",
    {
      0, 0,
      1, 1,
      3, 3,
      4, 4,
      5, 5,
      6, 6,
      9, 9,
      10, 10
    }
  },

  {
    "\\w",
    "hello_world megamutant edition",
    {
      0, 0,
      1, 1,
      2, 2,
      3, 3,
      4, 4,
      5, 5,
      6, 6,
      7, 7,
      8, 8,
      9, 9,
      10, 10,
      12, 12,
      13, 13,
      14, 14,
      15, 15,
      16, 16,
      17, 17,
      18, 18,
      19, 19,
      20, 20,
      21, 21,
      23, 23,
      24, 24,
      25, 25,
      26, 26,
      27, 27,
      28, 28,
      29, 29
    }
  },

  {
    "\\W",
    "hello_world megamutant edition",
    {
      11, 11,
      22, 22
    }
  },

  {
    "...",
    "aabcd ii4",
    {
      0, 2,
      3, 5,
      6, 8
    }
  },


  {
    "(1|2|3)(1|2|3)2",
    "131322222",
    {
      2, 4,
      5, 7
    }
  },

  {
    "............",
    "012345678901",
    {
      0, 11
    }
  },

  {
    "a+++++++++++++++++++++++++++a+",
    "bbfaa",
    {
      3, 4
    }
  },

  {
    "c.*c.*c12345678910",
    "c012cbcbbbddc12345678910111213141516171819202122",
    {
      0, 23
    }
  },

  {
    "c(1|2|3|c)*c(1|2|3|c)*c123",
    "c12cc123c123",
    {
      0, 11
    }
  },

  {
    "((1|2|3)(1|2|3)(1|2|3))*3123",
    "3123",
    {
      0, 3
    }
  },

  {"(a|b|c)(a|b|c)(a|b|c)",
   "abcabbacc",
   {
     0, 2,
     3, 5,
     6, 8
   }
  },

  {NULL, NULL, {0, 0}},
};

void CTestStateMachine::test_match_indexes()
{
  for (int i = 0; test_items[i].re; ++i) {

  }
}
////////////////////////////////////////////////////////////////////////////

